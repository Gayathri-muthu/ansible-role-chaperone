#
#  Copyright 2015 VMware, Inc.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
---
- name: create downloads directory
  file:
    dest: "{{ downloads_dir }}"
    state: directory
    owner: "{{ ansible_ssh_user }}"
    group: "{{ ansible_ssh_user }}"
    mode: 0755

- name: get depot file stats
  stat: path="{{ downloads_dir }}/{{ supervio_depot_zip }}"
  when: download_files
  register: depot
  tags:
    - downloads

- name: pull depot files for future downloads (may take many minutes)
  get_url:
    force: yes
    dest: "{{ downloads_dir }}/{{ supervio_depot_zip }}"
    url: "{{ supervio_depot_zip_url }}"
    timeout: "{{ downloads_timeout }}"
  when: download_files and (not depot.stat.exists or (depot.stat.md5 != "{{ supervio_depot_zip_md5 }}"))
  tags:
    - downloads

- name: get NSX OVA stats
  stat: path="{{ downloads_dir }}/{{ supervio_nsx_ova }}"
  register: nsxova
  when: download_files
  tags:
    - downloads

- name: pull NSX OVA for future downloads (may take many minutes)
  get_url:
    force: yes
    dest: "{{ downloads_dir }}/{{ supervio_nsx_ova }}"
    url: "{{ supervio_nsx_ova_url }}"
    timeout: "{{ downloads_timeout }}"
  when: download_files and (not nsxova.stat.exists or (nsxova.stat.md5 != "{{ supervio_nsx_ova_md5 }}"))
  tags:
    - downloads

- name: get VIO OVA file stats
  stat: path="{{ downloads_dir }}/{{ supervio_vio_ova }}"
  register: vioova
  when: download_files
  tags:
    - downloads

- name: pull VIO OVA for future downloads (may take many minutes)
  get_url:
    force: yes
    dest: "{{ downloads_dir }}/{{ supervio_vio_ova }}"
    url: "{{ supervio_vio_ova_url }}"
    timeout: "{{ downloads_timeout }}"
  when: download_files and (not vioova.stat.exists or (vioova.stat.md5 != "{{ supervio_vio_ova_md5 }}"))
  tags:
    - downloads

- name: get OVFTool zip file stats
  stat: path="{{ downloads_dir }}/{{ supervio_ovftool_zip }}"
  register: ovftool
  when: download_files
  tags:
    - downloads

- name: pull OVFTool for future downloads (may take many minutes)
  get_url:
    force: yes
    dest: "{{ downloads_dir }}/{{ supervio_ovftool_zip }}"
    url: "{{ supervio_ovftool_url }}"
    timeout: "{{ downloads_timeout }}"
  when: download_files and (not ovftool.stat.exists or (ovftool.stat.md5 != "{{ supervio_ovftool_md5 }}"))
  tags:
    - downloads

- name: get esx hypervisor iso file stats
  stat: path="{{ downloads_dir }}/{{ supervio_esxi_iso }}"
  register: esxiiso
  tags:
    - downloads

- name: pull esxi iso for future downloads (may take many minutes)
  get_url:
    dest: "{{ downloads_dir }}/{{ supervio_esxi_iso }}"
    url: "{{ supervio_esxi_url }}"
    timeout: "{{ downloads_timeout }}"
  when: download_files and not (esxiiso.stat.exists and (esxiiso.stat.md5 == "{{ supervio_esxi_md5 }}"))
  tags:
    - downloads

- name: get vCenter Appliance file stats
  stat: path="{{ downloads_dir }}/{{ supervio_vcsa_iso }}"
  register: vcsaiso
  when: download_files
  tags:
    - downloads

- name: pull vCenter Appliance ISO for future downloads (may take many minutes)
  get_url:
    force: yes
    dest: "{{ downloads_dir }}/{{ supervio_vcsa_iso }}"
    url: "{{ supervio_vcsa_url }}"
    timeout: "{{ downloads_timeout }}"
  when: download_files and (not vcsaiso.stat.exists or (vcsaiso.stat.md5 != "{{ supervio_vcsa_md5 }}"))
  tags:
    - downloads
