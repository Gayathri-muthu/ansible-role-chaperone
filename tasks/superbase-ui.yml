#
#  Copyright 2015 VMware, Inc.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
---
- name: create application directory
  file:
    dest: "/opt/{{ django_app }}"
    state: directory
    owner: "{{ ansible_ssh_user }}"
    group: "{{ ansible_ssh_user }}"
    mode: 0755
  tags:
    - rsync

- name: create blackhole directory
  file:
    dest: "/opt/{{ django_app }}/.blackhole"
    state: directory
    owner: "{{ ansible_ssh_user }}"
    group: "{{ ansible_ssh_user }}"
    mode: 0755
  tags:
    - rsync

- name: recursively sync the ui code from local repos
  sudo: no
  synchronize: src=../../../ui/ dest=/opt/{{ django_app }}/ recursive=yes rsync_opts=--no-motd,--exclude=.git archive=no
  tags:
    - rsync

- name: create plays directory
  file:
    dest: "/opt/{{ django_app }}-ansible"
    state: directory
    owner: "{{ ansible_ssh_user }}"
    group: "{{ ansible_ssh_user }}"
    mode: 0755
  tags:
    - rsync

- name: recursively sync the ansible playbooks from local repos
  sudo: no
  synchronize: src=../../../ansible/playbooks dest=/opt/{{ django_app }}-ansible/ recursive=yes rsync_opts=--no-motd,--exclude=.git archive=no
  tags:
    - rsync

- name: recursively sync the ansible roles from local repos
  sudo: no
  synchronize: src=../../../ansible/roles dest=/opt/{{ django_app }}-ansible/ recursive=yes rsync_opts=--no-motd,--exclude=.git archive=no
  tags:
    - rsync

- name: recursively sync the ansible library from local repos
  sudo: no
  synchronize: src=../../../ansible/library dest=/opt/{{ django_app }}-ansible/ recursive=yes rsync_opts=--no-motd,--exclude=.git archive=no
  tags:
    - rsync

- name: create application directory
  file:
    dest: "/opt/containers"
    state: directory
    owner: "{{ ansible_ssh_user }}"
    group: "{{ ansible_ssh_user }}"
    mode: 0755
  tags:
    - rsync

- name: recursively sync the containers built by ansible from local repos
  sudo: no
  synchronize: src=../../../containers dest=/opt/ recursive=yes rsync_opts=--no-motd,--exclude=.git archive=no
  tags:
    - rsync

- name: create playbook convenience script
  template:
    src: "opt/superbase_play.j2"
    dest: "/opt/{{ django_app }}/{{ django_app }}_play"
    owner: "{{ ansible_ssh_user }}"
    group: "{{ ansible_ssh_user }}"
    mode: "0700"
  tags:
    - rsync

- name: create playbook convenience script for tags
  template:
    src: "opt/superbase_play_tags.j2"
    dest: "/opt/{{ django_app }}/{{ django_app }}_play_tags"
    owner: "{{ ansible_ssh_user }}"
    group: "{{ ansible_ssh_user }}"
    mode: "0700"
  tags:
    - rsync

- name: create playbook convenience script for non-default inventory 
  template:
    src: "opt/superbase_play_inventory.j2"
    dest: "/opt/{{ django_app }}/{{ django_app }}_play_inventory"
    owner: "{{ ansible_ssh_user }}"
    group: "{{ ansible_ssh_user }}"
    mode: "0700"
  tags:
    - rsync

- name: create custom variables script
  template:
    src: "opt/prepare_variables.py.j2"
    dest: "/opt/{{ django_app }}/prepare_variables.py"
    owner: "{{ ansible_ssh_user }}"
    group: "{{ ansible_ssh_user }}"
    mode: "0700"
  tags:
    - rsync

- name: Create settings.py
  template:
    src: "opt/superbase/settings.py.j2"
    dest: "/opt/{{ django_app }}/chaperone/settings.py"
    owner: "{{ ansible_ssh_user }}"
    group: "{{ ansible_ssh_user }}"
  notify: Restart apache2
  tags:
    - rsync

- name: Create local_settings.py
  template:
    src: "opt/superbase/local_settings.py.j2"
    dest: "/opt/{{ django_app }}/chaperone/local_settings.py"
    owner: "{{ ansible_ssh_user }}"
    group: "{{ ansible_ssh_user }}"
  notify: Restart apache2
  tags:
    - rsync

- name: Create application working directory
  file:
    dest: "/var/lib/{{ django_app }}"
    state: directory
    owner: "{{ ansible_ssh_user }}"
    group: "{{ ansible_ssh_user }}"
    mode: 0755
  tags:
    - rsync

- name: Create base.yml
  template:
    src: "var/lib/{{ django_app }}/base.yml.j2"
    dest: "/var/lib/{{ django_app }}/base.yml"
    owner: "{{ ansible_ssh_user }}"
    group: "{{ ansible_ssh_user }}"
  notify: Restart apache2
  tags:
    - rsync

- name: Create Answer files directory
  file:
    dest: "{{ chaperone_answer_dir }}"
    state: directory
    owner: "{{ ansible_ssh_user }}"
    group: "{{ ansible_ssh_user }}"
    mode: 0755
  tags:
    - rsync

- name: Create Prepare files directory
  file:
    dest: "{{ chaperone_prepare_files_dir }}"
    state: directory
    owner: "{{ ansible_ssh_user }}"
    group: "{{ ansible_ssh_user }}"
    mode: 0755
  tags:
    - rsync

- name: Create Logs directory
  file:
    dest: "{{ chaperone_log_dir }}/{{ django_app }}"
    state: directory
    owner: "{{ ansible_ssh_user }}"
    group: "{{ ansible_ssh_user }}"
    mode: 0755
  tags:
    - rsync

- name: Create database
  command: touch "/opt/{{ django_app }}/{{ django_app }}.db"
  args:
    creates: "/opt/{{ django_app }}/{{ django_app }}.db"
  sudo: no
  register: db

# Stat the db and if zero sized, rebuild it because either
# the above 'touch' created it, or someone else truncated it.
# either way, have to rebuild it.
- name: Stat the database to determine if it's truncated to zero
  stat: path="/opt/{{ django_app }}/{{ django_app }}.db" get_checksum=no get_md5=no
  when: not db.changed
  register: dbstat

- name: Initialize database
  command: python manage.py syncdb --noinput
  args:
    chdir: "/opt/{{ django_app }}"
  sudo: no
  when: db.changed or dbstat.stat.size == 0

- name: (Re)Generate site-available ui config
  template:
    src: "etc/apache2/sites-available/superbase.conf.j2"
    dest: "/etc/apache2/sites-available/{{ django_app }}.conf"
    owner: "{{ ansible_ssh_user }}"
    group: "{{ ansible_ssh_user }}"
    mode: 0644

- name: (Re)Generate site-available download config
  template:
    src: "etc/apache2/sites-available/superbase-downloads.conf.j2"
    dest: "/etc/apache2/sites-available/{{ django_app }}-downloads.conf"
    owner: "{{ ansible_ssh_user }}"
    group: "{{ ansible_ssh_user }}"
    mode: 0644
  tags:
    - downloads

- name: Disable 000-default site
  command: a2dissite 000-default
  notify: Restart apache2
  tags:
    - rsync

- name: Enable application site
  command: a2ensite {{ django_app }}
  notify: Restart apache2
  tags:
    - rsync

- name: enable the general application site (this is not the ui)
  command: "a2ensite {{ django_app }}-downloads"
  notify: Restart apache2
  tags:
    - downloads
