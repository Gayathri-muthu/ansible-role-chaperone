#!/usr/bin/env/python
from jinja2 import Template
import yaml

roles = [ 'vcenter', 'net', 'autodeploy']
answerfile = "{{answerfile|default('/var/lib/supervio/answerfile.yml')}}"

if __name__ == "__main__":
  context = yaml.load(file(answerfile,'r'))
  mgmt_ct = len([v for v in context.keys() if 'mgmt_esx_ip_' in v])
  compute_ct = len([v for v in context.keys() if 'compute_esx_ip_' in v])
  edge_ct = len([v for v in context.keys() if 'edge_esx_ip_' in v])

  context['mgmt_hosts'] = []
  for n in range(mgmt_ct):
    try:
      host = {}
      host['mac'] = context.get("mgmt_esx_mac_%d" % n)
      host['name'] = context.get("mgmt_esx_name_%d" % n)
      host['ip'] = context.get("mgmt_esx_ip_%d" % n)
    except KeyError:
      pass
    else:
      context['mgmt_hosts'].append(host)

  context['edge_hosts'] = []
  for n in range(edge_ct):
    try:
      host = {}
      host['mac'] = context.get("edge_esx_mac_%d" % n)
      host['name'] = context.get("edge_esx_name_%d" % n)
      host['ip'] = context.get("edge_esx_ip_%d" % n)
    except KeyError:
      pass
    else:
      context['edge_hosts'].append(host)

  context['compute_hosts'] = []
  for n in range(compute_ct):
    host = {}
    try:
      host['mac'] = context.get("compute_esx_mac_%d" % n)
      host['name'] = context.get("compute_esx_name_%d" % n)
      host['ip'] = context.get("compute_esx_ip_%d" % n)
    except KeyError:
      pass
    else:
      context['compute_hosts'].append(host)

  for role in roles:
    template = Template(file("/opt/supervio-ansible/roles/%s/defaults/main.yml.j2" % role).read())
    file("/opt/supervio-ansible/roles/%s/defaults/main.yml" % role,'w').write(template.render(context))
